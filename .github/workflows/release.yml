name: Release

# Trigger the workflow only when a version tag (prefixed with "v") is pushed.
on:
  push:
    tags:
      - 'v*.*.*'   # e.g. v0.3.0, v1.2.3

jobs:
  # Run tests before publishing
  test:
    name: Test Before Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Install dependencies
        run: dart pub get

      - name: Run tests
        run: dart test

      - name: Analyze code
        run: dart analyze --fatal-infos

  # Publish to pub.dev
  publish-pub:
    name: Publish to pub.dev
    runs-on: ubuntu-latest
    needs: test
    permissions:
      id-token: write # Required for authentication to pub.dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Install dependencies
        run: dart pub get

      - name: Publish to pub.dev
        run: dart pub publish --force

  # Create GitHub release
  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [test, publish-pub]
    permissions:
      contents: write        # required for creating a release
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # Extract the release notes for the current version from CHANGELOG.md.
      - name: Extract release notes
        id: notes
        uses: ffurrer2/extract-release-notes@v2
        # No inputs needed: the action looks for the section that follows
        # "## [Unreleased]" (Keep a Changelog convention).

      # Create the GitHub release with the extracted notes.
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Write release notes to temporary file to handle special characters safely
          echo '${{ steps.notes.outputs.release_notes }}' > /tmp/release_notes.txt
          gh release create "$GITHUB_REF_NAME" \
            --title "$GITHUB_REF_NAME" \
            --notes-file /tmp/release_notes.txt
